build:
    nodes:
        analysis:
            environment:
                mysql: false
                postgresql: false
                redis: false
                rabbitmq: false
                mongodb: false
                php:
                    version: 7.2
            cache:
                disabled: false
                directories:
                    - ~/.composer/cache

            project_setup:
                override: true
            tests:
                override:
                    - php-scrutinizer-run
tools:
    external_code_coverage:
        timeout: 1800

checks:
    php:
        code_rating: true
        duplication: true
        argument_type_checks: true
        assignment_of_null_return: true
        avoid_conflicting_incrementers: true
        avoid_useless_overridden_methods: true
        catch_class_exists: true
        closure_use_modifiable: true
        closure_use_not_conflicting: true
        deprecated_code_usage: true
        method_calls_on_non_object: true
        missing_arguments: true
        no_duplicate_arguments: true
        no_non_implemented_abstract_methods: true
        no_property_on_interface: true
        parameter_non_unique: true
        precedence_in_conditions: true
        precedence_mistakes: true
        require_php_tag_first: true
        security_vulnerabilities: true
        sql_injection_vulnerabilities: true
        too_many_arguments: true
        unreachable_code: true
        unused_methods: true
        unused_parameters: true
        unused_properties: true
        unused_variables: true
        use_statement_alias_conflict: true
        useless_calls: true
        variable_existence: true
        verify_access_scope_valid: true
        verify_argument_usable_as_reference: true
        verify_property_names: true
filter:
    excluded_paths:
        - test/*

build_failure_conditions:
    - 'elements.rating(<= C).new.exists'                        # No new classes/methods with a rating of C or worse allowed
    - 'issues.label("coding-style").new.exists'                 # No new coding style issues allowed
    - 'issues.severity(>= MAJOR).new.exists'                    # New issues of major or higher severity
    - 'project.metric_change("scrutinizer.test_coverage", < 0)' # Code Coverage decreased from previous inspection
    - 'patches.label("Doc Comments").new.exists'                # No new doc comments patches allowed
    - 'patches.label("Unused Use Statements").new.exists'       # No new unused imports patches allowed
